# Домашнее задание по теме "Try и Except"
"""Задание "Программистам всё можно":"""
'''
Пора разрушать шаблоны привычного нам Python! Вот вас раздражает, что мы не можем сложить число(int) и строку(str)? 
Давайте исправим это недоразумение!
Реализуйте следующую функцию:
add_everything_up, будет складывать числа(int, float) и строки(str)

Описание функции:
add_everything_up(a, b) принимает a и b, которые могут быть как числами(int, float), так и строками(str).
TypeError - когда a и b окажутся разными типами (числом и строкой), то возвращать строковое представление этих двух 
данных вместе (в том же порядке). Во всех остальных случаях выполнять стандартные действия.

Пример кода:
print(add_everything_up(123.456, 'строка'))
print(add_everything_up('яблоко', 4215))
print(add_everything_up(123.456, 7))

Вывод в консоль:
123.456строка
яблоко4215
130.456

Примечания:
Конструкции try-except в функции выполняют строго ту обработку, которая написана в задании (обращайте на важность 
порядка передачи данных).
Если хотите дополнить функции своими исключениями или написать отдельно дополнительно собственные функции - это 
не запрещено, мы не против, чтобы вы больше экспериментировали. Но в первую очередь выполните поставленную задачу.'''
######################################################################################################################

def add_everything_up(a, b):
    try:
        # отрабатываем сложение int or float или конкатенацию string
        z = a + b
        return f'Результат сложения {a} + {b} = {z}'

    except TypeError as exc:
        """ 
        Отрабатывам ошибкки (int or float) + string
        если dict, list .... то возврашаем строку с TypeError
        """
        if isinstance(a, (int, float)):
            a = str(a)
        elif isinstance(b, (int, float)):
            b = str(b)
        else:
            return 'Ошибка данных!!! : ', exc
        return f'Результат сложения {a} + {b} = {a + b}'

    else:
        """# НЕ СРАБАТЫВАЕТ!!!! если в TRY использектся RETURN"""
        print('Были переданы корректные аргументы')

    finally:
        print('=========================================================Работа фукции "add_everything_up" завершена')
        ''' ЭТОТ RETURN ГЛАВНЫЙ - ВСЕ остальные КУРЯТ за углом!!!!!!!!!!!!!!!!!!!!!!!!!!!'''
        #return 'FINALLY'

#######################################################################################################################
print(add_everything_up(123.456, 'строка'))
print(add_everything_up('яблоко', 4215))
print(add_everything_up(123.456, 7))
print(add_everything_up('яблоко', 'груша'))
print(add_everything_up('яблоко', ['груша', 39]))
